Total time: 2.99463 s
File: test.py
Function: gen_problem at line 24

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    24                                           @profile
    25                                           #生成题目
    26                                           def gen_problem(mod):
    27     11318     152601.0     13.5      0.5      problem = []
    28     11318     125061.0     11.0      0.4      const_op = ("+", "-", "×", "÷")
    29
    30     11318     118676.0     10.5      0.4      ok = False
    31     22845     269393.0     11.8      0.9      while ok == False :
    32     11527     120474.0     10.5      0.4          ok = True
    33
    34                                                   #生成运算符
    35     11527    1049005.0     91.0      3.5          cnt_op = random.randint(1, 3)
    36     11527     132273.0     11.5      0.4          op_list = []
    37     34493     354442.0     10.3      1.2          while cnt_op:
    38     22966    2070560.0     90.2      6.9              bit = random.randint(0, 3)
    39     22966     343122.0     14.9      1.1              op_list.append(const_op[bit])
    40     22966     277387.0     12.1      0.9              cnt_op -= 1
    41
    42     11527    3943719.0    342.1     13.2          num = gen_num(mod)
    43     11527     154828.0     13.4      0.5          problem = [num]
    44     11527     129318.0     11.2      0.4          last_op = " "
    45     34187     386061.0     11.3      1.3          for op in op_list:
    46     22869    7760184.0    339.3     25.9              part_num = gen_num(mod)
    47
    48                                                       #交换标记，决定problem(值为num)和part_num的位置
    49     22869    2103343.0     92.0      7.0              swap_flag = random.randint(0, 1)
    50
    51     22869     257952.0     11.3      0.9              t = 0  #num和part_num的运算结果
    52                                                       #加
    53     22869     265209.0     11.6      0.9              if op == "+":
    54      5707    1072623.0    187.9      3.6                  t = num + part_num
    55                                                       #减
    56     17162     200640.0     11.7      0.7              elif op == "-":
    57                                                           #对problem和part_num的位置进行分类
    58      5648     233702.0     41.4      0.8                  if swap_flag == 0 or num >= mod:
    59      3084      32093.0     10.4      0.1                      swap_flag = 0
    60      3084     574901.0    186.4      1.9                      t = num - part_num
    61      4397     312343.0     71.0      1.0                      while t < 0:
    62      1313     325622.0    248.0      1.1                          part_num = gen_num(min(mod, int(num)))
    63      1313     244605.0    186.3      0.8                          t = num - part_num
    64                                                           else:
    65      2564     489048.0    190.7      1.6                      t = part_num - num
    66      3726     248423.0     66.7      0.8                      while t < 0:
    67      1162     806191.0    693.8      2.7                          part_num = gen_num(int(mod - num)) + num
    68      1162     211201.0    181.8      0.7                          t = part_num - num
    69      2564      55316.0     21.6      0.2                      if part_num.denominator > mod + 5 :
    70       209       2225.0     10.6      0.0                          ok = False
    71       209       2271.0     10.9      0.0                          break
    72                                                       #乘
    73     11514     136071.0     11.8      0.5              elif op == "×":
    74      5749    1017524.0    177.0      3.4                  t = num * part_num
    75                                                       #除
    76                                                       else:
    77                                                           #对problem和part_num的位置进行分类
    78      5765      69447.0     12.0      0.2                  if swap_flag == 0:
    79      3070     105987.0     34.5      0.4                      while part_num == 0:
    80       171      58594.0    342.7      0.2                          part_num = gen_num(mod)
    81      2899     530570.0    183.0      1.8                      t = num / part_num
    82                                                           else:
    83      2866      98364.0     34.3      0.3                      if num == 0:
    84       161       1763.0     11.0      0.0                          swap_flag = 0
    85       168       4985.0     29.7      0.0                          while part_num == 0:
    86         7       2170.0    310.0      0.0                              part_num = gen_num(mod)
    87       161      28314.0    175.9      0.1                          t = num / part_num
    88                                                               else:
    89      2705     487311.0    180.2      1.6                          t = part_num / num
    90
    91                                                       #加括号
    92     22660     280804.0     12.4      0.9              bracket_flag = False
    93     22660     309374.0     13.7      1.0              if op == "×" or op == "÷":
    94     11514     157426.0     13.7      0.5                  if last_op == "+" or last_op == "-":
    95      2816      30117.0     10.7      0.1                      bracket_flag = True
    96
    97     22660     251463.0     11.1      0.8              if bracket_flag:
    98      2816      47053.0     16.7      0.2                  problem = ["("] + problem + [")"]
    99
   100                                                       #交换位置
   101     22660     276989.0     12.2      0.9              if swap_flag == 1:
   102     10743     150161.0     14.0      0.5                  if bracket_flag == False and last_op != " ":
   103      3815      65557.0     17.2      0.2                      problem = ["("] + problem + [")"]
   104     10743     183286.0     17.1      0.6                  problem = [part_num] + [op] + problem
   105                                                       else:
   106     11917     199919.0     16.8      0.7                  problem = problem + [op] + [part_num]
   107
   108     22660     272577.0     12.0      0.9              num = t
   109     22660     245443.0     10.8      0.8              last_op = op
   110
   111     11318     110170.0      9.7      0.4      return problem
